# Deploy BitDust to webdock.io

1. Go to https://webdock.io and create new account

2. Go to https://webdock.io/en/dash/billing and fill in your credit card details

3. Go to https://webdock.io/en/dash/profile and find section API & Integrations, click "CREATE API TOKEN" and copy with CTRL+C your API token

4. Create ~/.webdock_api_token text file and paste API token content there, save the file and make sure it is readable

5. Create deployment sript:

        curl -s -X POST -H "Accept: application/json" -H 'Content-Type: application/json' -H "Authorization: Bearer `cat ~/.webdock_api_token`" 'https://api.webdock.io/v1/account/scripts' -d '{"name":"bitdustdeploy","filename":"bitdustdeploy.sh","content":"#!/bin/bash\r\n\r\nwhoami; pwd; id; apt-get --yes install git gcc build-essential libssl-dev libffi-dev python3-dev python3-virtualenv && rm -rf /bitdust && git clone https://github.com/vesellov/devel.git /bitdust && cd /bitdust && python3 bitdust.py install && ln -s -f /root/.bitdust/bitdust /bin/bitdust"}'  | python -m json.tool
        # NOTE!!! Remeber the output from that command - deployment script "scriptId" identifier is to be used later

        # To update the deployment script content use different method:
        curl -s -X PATCH -H "Accept: application/json" -H 'Content-Type: application/json' -H "Authorization: Bearer `cat ~/.webdock_api_token`" 'https://api.webdock.io/v1/account/scripts/<scriptId>' -d '{"name":"bitdustdeploy","filename":"bitdustdeploy.sh","content":"#!/bin/bash\r\n\r\nwhoami; pwd; id; apt-get --yes install git gcc build-essential libssl-dev libffi-dev python3-dev python3-virtualenv && rm -rf /bitdust && git clone https://github.com/vesellov/devel.git /bitdust && cd /bitdust && python3 bitdust.py install && ln -s -f /root/.bitdust/bitdust /bin/bitdust"}' | python -m json.tool

7. Provision new VPS:

        curl -s -X POST -H "Authorization: Bearer `cat ~/.webdock_api_token`" -H "Accept: application/json" -H 'Content-Type: application/json' -d '{"name":"bitdust","locationId":"dk","profileSlug":"webdockpico4-2024","imageSlug":"webdock-ubuntu-jammy-cloud"}' 'https://api.webdock.io/v1/servers' | python -m json.tool
        # NOTE!!! Remeber the output from that command - the "slug", "ipv4", "aliases" fields values are to be used later

8. Execute deployment script:

        curl -s -X POST -H "Accept: application/json" -H 'Content-Type: application/json' -H "Authorization: Bearer `cat ~/.webdock_api_token`" 'https://api.webdock.io/v1/servers/bitdusttest/scripts' -d '{"scriptId":"<scriptId>","path":"/root/bitdust_deploy.sh","makeScriptExecutable":true,"executeImmediately":true}'  | python -m json.tool







List servers:

        curl -s -H "Authorization: Bearer `cat ~/.webdock_api_token`" 'https://api.webdock.io/v1/servers' | python -m json.tool


List events:

        curl -s -H "Authorization: Bearer `cat ~/.webdock_api_token`" 'https://api.webdock.io/v1/events' | python -m json.tool


List images:
        curl -s -H "Authorization: Bearer `cat ~/.webdock_api_token`" 'https://api.webdock.io/v1/images' | python -m json.tool


List locations:
        curl -s -H "Authorization: Bearer `cat ~/.webdock_api_token`" 'https://api.webdock.io/v1/locations' | python -m json.tool


List profiles in the location:
        curl -s -H "Authorization: Bearer `cat ~/.webdock_api_token`" 'https://api.webdock.io/v1/profiles?locationId=dk' | python -m json.tool


List scripts:

        curl -s -H "Authorization: Bearer `cat ~/.webdock_api_token`" 'https://api.webdock.io/v1/scripts' | python -m json.tool


List account scripts:

        curl -s -H "Authorization: Bearer `cat ~/.webdock_api_token`" 'https://api.webdock.io/v1/account/scripts' | python -m json.tool


To stop a server:
        curl -s -X POST -H "Authorization: Bearer `cat ~/.webdock_api_token`" 'https://api.webdock.io/v1/servers/bitdusttest/actions/stop'


To start a server:
        curl -s -X POST -H "Authorization: Bearer `cat ~/.webdock_api_token`" 'https://api.webdock.io/v1/servers/bitdusttest/actions/start'
